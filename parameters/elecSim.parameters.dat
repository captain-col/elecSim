This is the file of parameters to control the electronics simulation.

The amount of time to save in digits before and after the trigger.  This is
also used to calculate the total time window that will be simulated.  The
window from min(triggerTime)-preTriggerTime to
max(triggerTime)+postTriggerTime will be simulated.

< elecSim.simple.preTriggerTime = 50 us >
< elecSim.simple.postTriggerTime = 700 us >

The integration window for the trigger.  If this is negative then use a
beam trigger (i.e. a trigger time of 0.0)

< elecSim.simple.trigger.window = -1 > 

The time between triggers.  Part of this is dead time, part of it is the
integration.  

< elecSim.simple.trigger.deadTime = 1 ms >

The offset between the trigger condition being met and the trigger.

< elecSim.simple.trigger.offset = 0 ns >

The trigger threshold in MeV.
< elecSim.simple.trigger.threshold = 5 MeV >

The number of photons collected per MeV.  This comes from a presentation by
Ion Stancu on 13 Feb 2014 and is based on a number he got from C. Grant
(22000/MeV).  Ion found 0.39 pe/MeV per PMT assuming energy deposition at
the center of the detector and ?5 cm? pmts.  I've corrected it for quantum
efficiency (assuming 22%).

< elecSim.simple.light.collection = 4840 >

The dark noise for the PMTs.

< elecSim.simple.light.darkCurrent = 100 Hz >

The fraction of the light in the short time component of the scintillator.
This comes from a fit by Ion Stancu (shown on 13 Feb 2014)

< elecSim.simple.light.shortFraction = 0.38 >

The short time constant for the light from the scintillator.  This comes
from a fit by Ion Stancu (shown on 13 Feb 2014)

< elecSim.simple.light.shortTime = 6.7 ns >

The short time constant for the light from the scintillator.  This comes
from a fit by Ion Stancu (shown on 13 Feb 2014)

< elecSim.simple.light.longTime = 917 ns >

The probability that the electron will recombine with the argon ion.  This
is tuned to ICARUS measurements.
< elecSim.simple.recombinationProb = 0.4291 >

The activation (ionization) energy for argon
< elecSim.simple.activationEnergy = 19.5 eV >

The Liquid Argon drift velocity to use.  This corresponds to 500 V/cm
< elecSim.simple.drift.velocity = 1.6 mm/us >

The Liquid Argon diffusion coefficient to use.  This is from Shibamura et
al, "Ratio of Diffusion coefficient to electron mobility", PR A20, 1979

< elecSim.simple.drift.diffusion = 15 cm2/s >

The electron lifetime.  This is set to the target value for the CAPTAIN
purification system.  The expectations are 1.3 ms for CAPTAIN, and 0.5 ms
for mini-CAPTAIN.

< elecSim.simple.drift.life = 1.3 ms >

The charge induction factor for the induction wires.  This is assumed to be
the same for the U and V planes since they have similar electrical
properties.  A factor of 1.0 means that an average charge |e-| induced |e-|
on the wires.

< elecSim.simple.wire.induction = 1.0 >

The electronics noise quoted in electron equivalent noise.  This
parameter controls the part of that noise that comes before the amplifier
shaping.  This is the thermal noise from the wires.  It's small enough that
it's not simulated.

< elecSim.simple.wire.noise = 0 >

The amplifier shape peaking time.

< elecSim.simple.amplifier.riseTime = 1000 ns >

Control the shape of the leading edge of the pulse.  The nominal value
seems to be between 1.0 and 2.0 (based on the observed electronics shape).

< elecSim.simple.amplifier.riseShape = 2.0 >

Control the shape of the leading edge of the pulse.  The nominal value
seems to be about 2.0 (based on the observed electronics shape).

< elecSim.simple.amplifier.fallShape = 2.0 >

Flag for if the shaper is conserving the pulse height or the pulse area.
If this is true, the integral is conserved, otherwise the height is
conserved.
     
< elecSim.simple.amplifier.integral = false >

The amplifier gain for the collection wires.  The ADC has design gain of
4.7, 7.8, 14, or 25 mV/fC.  The units are mV/fC.

< elecSim.simple.amplifier.gain.collection = 14 >

The amplifier gain for the induction wires.  The ADC has design gain of
4.7, 7.8, 14, or 25 mV/fC.  The units are mV/fC.

< elecSim.simple.amplifier.gain.induction = 14 >

The amplifier gain for the PMTs.  A different front end is used that
for the TPC, so the gains are different.  The units are adc/pe.

< elecSim.simple.amplifier.gain.pmt = 200.0 >

The width of the 1 pe peak (in terms of pe).
    
< elecSim.simple.amplifier.width = 0.25 > 

The digitization "frequency" (actually the time per bin).

< elecSim.simple.digitization.step = 500 ns >

The digitization noise that is not affected by the pulse shaping.  This
noise is given in electron equivalent noise.  It is inserted into the
signal between the pulse shaping and the amplification.  The initial value
is 650 e- taken from IEEE Trans. on Nuc Sci Vol. 58 no. 5, 2011 "Front-End
ASIC for a Liquid Argon TPC".  This should be tuned to the measured noise.

< elecSim.simple.digitization.noise = 2000.0 >

The digitization pedestal.

< elecSim.simple.digitization.pedestal = 2048 >

The digitizer has a design slope of 2.5 ADC per mV of input voltage from
the amplifier.

< elecSim.simple.digitization.slope = 2.5 >

The ADC maximum value.
< elecSim.simple.digitization.maximum = 4095 >

The ADC minimum value.
< elecSim.simple.digitization.minimum = 0 >

The digitization starts before the trigger by this amount.  If this is less
than zero, then use elecSim.simple.preTriggerTime.

< elecSim.simple.digitization.preTriggerTime = -1 >
< elecSim.simple.digitization.postTriggerTime = -1 >

The digitization threshold.  A signal level over this triggers saving a
digit.   This is the difference between the current signal and the averaged
over the previous measurements.  This is given in ADC counts, but can be a
floating point value.  If this is less than zero, then there is no zero
suppression. 

< elecSim.simple.digitization.threshold = -1 >

The pre-threshold time to save into a digit.  If less than zero, then this is
the same as elecSim.simple.digitization.preTriggerTime
< elecSim.simple.digitization.preThreshold = 50 us >

The post signal time to save into a digit.  If less than zero, then this is
the same as elecSim.simple.digitization.postTriggerTIme
< elecSim.simple.digitization.postThreshold = 50 us >

The PMT digitizer time step

< elecSim.simple.digitization.pmtStep = 4 ns > 

